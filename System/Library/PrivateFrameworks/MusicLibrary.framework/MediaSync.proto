// Copyright 2014 Apple Inc. All rights reserved.

import "MediaItem.proto";

syntax = "proto2";

option objc_package = "MSP";
option objc_framework = "MusicLibrary";
option objc_class_visibility = "default";
option objc_use_arc = "true";


// a media sync stream is comprised of a set of sync packages.
// each package has the package number and the total count expected
// the last package is marked to end the stream.

message MediaSyncPackage {
    enum Type {
        None = 1;           // used for the final package
        Header = 2;         // initial package containing details about the session
        Error = 3;          // sent to terminate the sync due to some failure
        SyncOperation = 4;  // contains sync operation data
    }

    // package header fields, containing some progress and other data about the sync
    optional Type type = 1;

    // set if this is the last package in the stream
    optional bool lastPackage = 2;

    // sync operation data
    optional MediaSyncHeader header = 10;
    optional MediaSyncOperation syncOperation = 11;
    optional MediaSyncError error = 13;
}

// Sync type
enum MediaSyncType {
    Reset = 1;  // existing sync data is being replaced
    Delta = 2;  // incremental changes only
}

// Sync header data
message MediaSyncHeader {
    optional int32 totalPackages = 1;
    optional MediaSyncType syncType = 2;
}

// Sync operation data
message MediaSyncOperation {
    enum Type {
        Add = 1;
        Update = 2;
        Delete = 3;
    }

    // at minimum is a type and id
    optional Type operationType = 1;
    optional MultiverseIdentifier multiverseId= 2;

    // optional data objects are inlcuded for adds/updates
    optional Artist artist = 10;
    optional Album album = 11;
    optional Genre genre = 12;
    optional Series series = 13;
    optional MediaItem mediaItem = 14;

    optional Playlist playlist = 20;
}


// Sync error data
message MediaSyncError {
    // Error information, in case of failure
    optional string errorDescription = 1;
    optional int32 errorCode = 2;
}


